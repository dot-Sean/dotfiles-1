asciinema rec (ctrl D to exit)

zsh ^r (search command buffer)
zsh kill <keyword><tab><tab> (search then kill process list)
zsh ls -<tab> (show command options)
zsh ssh <tab> (brings up previously acessed hostnames)
zsh cd a/b/c/d (zsh automatically works this out)
zsh d (list directory history, hit 1, 2, 3, 4 etc to change dir)
zsh pbcopy < ~/.ssh/id_rsa.pub

brew options <package> (shows package compile options)

gpg --gen-key

autojump j foo (jump to dir contains foo)
autojump jc bar (jump to child dir)
autojump jo music (open finder)
autojump j -s (show stats and weights)

script (record session, ctrl-D to end recording)

ssh-keygen -b 4096 -f .ssh/id_rsa4096_2014

ssh-keygen -t dsa -f .ssh/id_dsa
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_dsa_stash

cd - (go back a directory)
ds (show directory stack
cd -# (eg. cd -3 to navigate to item 3 on directory stack)

tree -f 
tree -C | less -R (colored tree)
tree -C -P '*SQL*' --prune 

ctags -R .
ctags -R -f ./.git/tags .

VIM vim
vim http://users.ece.utexas.edu/~adnan/vimqrc.html

ctags -R --language-force=scala -f.tags `/System/Library/Frameworks/JavaVM.framework/Versions/Current/Commands/java_home`

vim general :set filetype? (show filetype)
vim general C (delete from cursor to end of line, insert mode)
vim general :set number 
vim general :set number!
vim general :set nu  (enable line numbers)
vim general :set nu! (disable line numbers)
vim general :Helptags (load help tags)
vim general /<string> (hit n for next match)
vim general :set hlsearch (highlight search results)

vim navigation gg (top of page)
vim navigation G (bottom of page)

vim ctags ,] (jump to method definition)
vim ctags ,[ (climb back up definition tree)
vim ctags f8 (activate code explorer)

https://github.com/kalmanb/vim-scala-auto-import/blob/master/plugin/JavaImp.vim
vim  ^i (create import statement)

ctags -R --language-force=scala -f.tags /opt/sun-jdk-1.5.0.08/share/

vim commandt ,t (open command t)
vim commandt ,b (to show whats in buffer)
vim commandt ^u (clear search selection)
vim commandt ^c (cancel file listing)
vim commandt _  (previous buffer)
vim commandt +  (next buffer)

vim splits  :vsp (split vertically)
vim splits  :sp  (split horizontally)
vim splits  ,,   (change between splits)
vim splits  ^wn  (new empty window)
vim splits  ^ws  (split)
vim splits  ^w left/right/up/down arrow (split)
vim splits  ^w+ (resize split window)

vim buffers  :bd (close buffer or current file without quiting vim)
vim buffers  :buffers
vim buffers    1 #h   "foo"                          line 1
vim buffers    2 %a   "bar"                          line 1
vim buffers  :bd 2
vim buffers  :buffers
vim buffers    1 %a   "foo"                          line 1
vim buffers  :b 2
vim buffers    2   bar

vim :%s/<match>/<replace>/c (ask permission before replacing string)

nerdtree  ^n (toggle)
nerdtree  ?  (help)
nerdtree  o  (open single node)
nerdtree  O  (open node recursively)

sbc   - sbt compile
sbco  - sbt console
sbcq  - sbt console-quick
sbcl  - sbt clean
sbcp  - sbt console-project
sbd   - sbt doc
sbdc  - sbt dist:clean
sbdi  - sbt dist
sbgi  - sbt gen-idea
sbp   - sbt publish
sbpl  - sbt publish-local
sbr   - sbt run
sbrm  - sbt run-main
sbu   - sbt update
sbx   - sbt test

g       - git
gst     - git status
gd      - git diff
gdc     - git diff --cached
gdv     - git diff -w "$@" | view -
gl      - git pull
gup     - git pull --rebase
gp      - git push
gc      - git commit -v
gc!     - git commit -v --amend
gca     - git commit -v -a
gca!    - git commit -v -a --amend
gcmsg   - git commit -m
gco     - git checkout
gcm     - git checkout master
gr      - git remote
grv     - git remote -v
grmv    - git remote rename
grrm    - git remote remove
grset   - git remote set-url
grup    - git remote update
grbi    - git rebase -i
grbc    - git rebase --continue
grba    - git rebase --abort
gb      - git branch
gba     - git branch -a
gcl     - git config --list
gcp     - git cherry-pick
glg     - git log --stat --max-count=10
glgg    - git log --graph --max-count=10
glgga   - git log --graph --decorate --all
glo     - git log --oneline --decorate --color
glog    - git log --oneline --decorate --color --graph
gss     - git status -s
ga      - git add
gm      - git merge
grh     - git reset HEAD
grhh    - git reset HEAD --hard
gwc     - git whatchanged -p --abbrev-commit --pretty=medium
gpoat   - git push origin --all && git push origin --tags
gmt     - git mergetool --no-prompt
gg      - git gui citool
gga     - git gui citool --amend
gk      - gitk --all --branches
gsts    - git stash show --text
gsta    - git stash
gstp    - git stash pop
gstd    - git stash drop
grt     - cd $(git rev-parse --show-toplevel || echo ".")
gsr     - git svn rebase
gsd     - git svn dcommit
gcount  - git shortlog -sn
gclean  - git reset --hard && git clean -dfx
git-svn-dcommit-push git svn dcommit && git push github master:svntrunk

# fetch updates from cloned repo
git remote add upstream <repo>
git fetch upstream
git fetch upstream --tags
# then: (like "git pull" which is fetch + merge)
git merge upstream/master master
git push --tags origin

iterm CMD, (split vertical tab) 
iterm CMD. (split horizontal tab)

dig @192.168.23.253 -t SRV skydns.local

cat file.json | pp_json

grep -l <path> (include only filename in output)

sed -i .bak "s/csbuild/build/g" <file> (replace string in file in place with extension)

apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys <key>

cat /proc/cmdline (kernel parameters)

clush -bw node-00[1-3] sudo ls

clush -w node[3-5,62] uname -r (Run command `uname -r` on nodes: node3, node4, node5 and node62)
clush -w node[3-5,62] -b uname -r (Run command `uname -r` on nodes[3-5,62] and display gathered output results (``dshbak``-like)
ssh node32 find /etc/yum.repos.d -type f | clush -w node[40-42] -b xargs ls -l (Search some files on node32 in /etc/yum.repos.d and use clush to list the matching ones on node[40-42], and use ``-b`` to display gathered results.)
clush -a uname -r (Run command `uname -r` on all cluster nodes, see ``clush.conf``\(5) to setup all cluster nodes (`nodes_all:` field).)
clush -a -x node[5,7] uname -r (Run command `uname -r` on all cluster nodes except on nodes node5 and node7.)
clush -g oss modprobe lustre (Run command `modprobe lustre` on nodes from node group named `oss`, see ``clush.conf``\(5) to setup node groups (`nodes_group:` field).)
clush -w node[3-5,62] --copy /etc/motd (Copy local file `/etc/motd` to remote nodes node[3-5,62].)
clush -w node[3-5,62] --copy /etc/motd --dest /tmp/motd2 (Copy local file `/etc/motd` to remote nodes node[3-5,62] at path `/tmp/motd2`.)
clush -w node[3-5,62] -c /usr/share/doc/clustershell (Recursively copy local directory `/usr/share/doc/clustershell` to the same path on remote nodes node[3-5,62].)

ansible -i <inventory> -l <node pattern> <playbook> (limit playbook to nodes)
ansible -i production all -a "uptime" -f 10 (10 uptime commands in parallel)
ansible -i chifley etcd_master -m shell -a "ls -la | grep foo" (run shell command with pipe)

maprcli node services -tasktracker restart -nodes node1 node2 node3
maprcli node services -name nodemanager -action start -nodes node-001
maprcli alarm list (check mapr alarms)
maprcli service list -node qtausc-bda03 (list services on node)
maprcli disk list -host `hostname` (list disks)

service mapr-zookeeper qstatus (check for quorom)

iptables -t nat -L -n -v

# flush rules
iptables -F
iptables -X
iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT

iptstate (check iptables tables)

cat /prod/<pid>/cmdline (find the command used for process id)

initctl list (upstart list)

chmod g+s /some/directory (make directory group sticky, any files / directories created get group permission)

lsof -i :<port> (list processes listning on ports)

/etc/init.d/apparmor teardown # AppArmor 2.5.1+
/etc/init.d/apparmor stop # AppArmor 2.5 and lower

pkill <pattern> (kill processes matching pattern)
pkill -f <pattern> (use entire process string)

echo 'johnb:mapr' | sudo chpasswd

iozone -I -r 1M -s 4G -i 0 -i 1 -i 2 -f /dev/sdb +-n
/opt/MegaRAID/storcli/storcli64 /c0 /v1 set pdcache=off

dd if=/dev/zero of=10Gtest bs=1M count=10000
dd if=/dev/zero of=10Gtest bs=1M count=10000 oflag=direct (disable OS cache)

dstat --disk-util (shows per disk, disk utilization)
